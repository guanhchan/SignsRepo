
@{
    ViewBag.Title = "Main";


}

<div class="container" @*ng-app="guanApp"*@>
    <div class="panel">
        <div class="panel-body">

            <form class="form col-md-12 contact-form" id="addressAddForm" name="addressCtrl.addressAddForm" role="form" novalidate>
                <fieldset>

                    <div class="form-group">

                        <label for="StreetAddress" style="color:black"><h5>Enter Street Address</h5></label>
                        <span style="color:red" ng-show="addressCtrl.addressAddForm.Line1.$dirty && addressCtrl.addressAddForm.Line1.$invalid">
                            <span ng-show="addressCtrl.addressAddForm.Line1.$error.required">Address is required.</span>
                        </span>
                        <div class="input-group-lg">
                            <input id="Line1" name="Line1" type="text" ng-model="addressCtrl.addStreetData.Line1" class="form-control" placeholder="Please enter a valid Street Address" required>
                        </div>
                    </div>
                    <div class="form-group">

                        <label for="City" style="color:black"><h5>Enter City</h5></label>
                        <span style="color:red" ng-show="addressCtrl.addressAddForm.City.$dirty && addressCtrl.addressAddForm.City.$invalid">
                            <span ng-show="addressCtrl.addressAddForm.City.$error.required">City is required.</span>
                        </span>
                        <div class="col-md-12 input-group-lg">
                            <input id="City" name="City" type="text" ng-model="addressCtrl.addStreetData.City" class="form-control" placeholder="Please enter a valid City" required>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="state" style="color:black"><h5>Choose State</h5></label>
                        <span style="color:red" ng-show="addressCtrl.addressAddForm.State.$dirty && addressCtrl.addressAddForm.State.$invalid">
                            <span ng-show="addressCtrl.addressAddForm.State.$error.required">State is required.</span>
                        </span>
                        <div class="col-md-12 input-group-lg">
                            <select class="form-control"
                                    placeholder="state"
                                    id="state"
                                    name="state"
                                    ng-model="addressCtrl.addStreetData.State"
                                    required>
                                <option value="CA">California</option>

                            </select>
                        </div>
                    </div>


                    <div class="form-group">

                        <label for="Zipcode" style="color:black"><h5>Enter ZipCode</h5></label>
                        <span style="color:red" ng-show="addressCtrl.addressAddForm.ZipCode.$dirty && addressCtrl.addressAddForm.ZipCode.$invalid">
                            <span ng-show="addressCtrl.addressAddForm.ZipCode.$error.required">Zip Code is required.</span>
                        </span>
                        <div class="col-md-12 input-group-lg">
                            <input id="ZipCode" name="ZipCode" type="text" ng-model="addressCtrl.addStreetData.ZipCode" placeholder="Please enter a valid Zip Code" class="form-control" required>
                        </div>
                    </div>
                    <div class="form-group ">

                        <label for="StreetHourStart" style="color:black"><h5>Street Sweeping Hours Start</h5></label>

                        <div class="col-md-12 input-group-lg">
                            <select class="form-control"
                                    placeholder="StreetHourStart"
                                    id="StreetHourStart"
                                    name="StreetHourStart"
                                    ng-model="addressCtrl.addStreetData.StreetHourStart">
                                <option value="6am">6am</option>
                                <option value="7am">7am</option>
                                <option value="8am">8am</option>
                                <option value="9am">9am</option>
                                <option value="10am">10am</option>
                                <option value="11am">11am</option>
                                <option value="12pm">12pm</option>
                                <option value="1pm">1pm</option>
                                <option value="2pm">2pm</option>
                                <option value="3pm">3pm</option>
                                <option value="4pm">4pm</option>
                                <option value="5pm">5pm</option>
                                <option value="6pm">6pm</option>
                                <option value="7pm">7pm</option>
                                <option value="8pm">8pm</option>
                                <option value="9pm">9pm</option>
                                <option value="10pm">10pm</option>

                            </select>
                        </div>
                    </div>
                    <div class="form-group ">
                        <label for="StreetHourEnd" style="color:black"><h5>Street Sweeping Hours Ends</h5></label>

                        <div class="col-md-12 input-group-lg">
                            <select class="form-control"
                                    placeholder="StreetHourEnd"
                                    id="StreetHourEnd"
                                    name="StreetHourEnd"
                                    ng-model="addressCtrl.addStreetData.StreetHourEnd">
                                <option value="6am">6am</option>
                                <option value="7am">7am</option>
                                <option value="8am">8am</option>
                                <option value="9am">9am</option>
                                <option value="10am">10am</option>
                                <option value="11am">11am</option>
                                <option value="12pm">12pm</option>
                                <option value="1pm">1pm</option>
                                <option value="2pm">2pm</option>
                                <option value="3pm">3pm</option>
                                <option value="4pm">4pm</option>
                                <option value="5pm">5pm</option>
                                <option value="6pm">6pm</option>
                                <option value="7pm">7pm</option>
                                <option value="8pm">8pm</option>
                                <option value="9pm">9pm</option>
                                <option value="10pm">10pm</option>

                            </select>
                        </div>
                    </div>
                    <div class="form-group ">
                        <label for="DayOfWeek" style="color:black"><h5>What day is Street Sweeping</h5></label>

                        <div class="col-md-12 input-group-lg">
                            <select class="form-control"
                                    placeholder="DayOfWeek"
                                    id="DayOfWeek"
                                    name="DayOfWeek"
                                    ng-model="addressCtrl.addStreetData.DayOfWeek">
                                <option value="1">Monday</option>
                                <option value="2">Tuesday</option>
                                <option value="3">Wednesday</option>
                                <option value="4">Thursday</option>
                                <option value="5">Friday</option>
                                <option value="6">Saturday</option>
                                <option value="7">Sunday</option>

                            </select>
                        </div>
                    </div>
                    <div class="form-group ">
                        <label for="TimeLimit" style="color:black"><h5>Parking Time Limit</h5></label>

                        <div class="col-md-12 input-group-lg">
                            <select class="form-control"
                                    placeholder="TimeLimit"
                                    id="TimeLimit"
                                    name="TimeLimit"
                                    ng-model="addressCtrl.addStreetData.TimeLimit">
                                <option value="None">None</option>
                                <option value="30 Mins">30 Mins</option>
                                <option value="1 Hour">1 Hour</option>
                                <option value="2 Hours">2 Hours</option>
                                <option value="3 Hours">3 Hours</option>
                                <option value="4 Hours">4 Hours</option>
                                <option value="5 Hours">5 Hours</option>
                                <option value="6 Hours">6 Hours</option>

                            </select>
                        </div>
                    </div>
                    <br />
                    <p>
                        <div class="col-md-12 ">
                            <button class="btn btn-primary col-sm-offset-5" style="width: 120px" data-ng-click="addressCtrl.submitStreetData()" ng-disabled="addressCtrl.addressAddForm.$invalid" type="submit">Submit</button>
                        </div>
                    </p>
                </fieldset>
            </form>

        </div>
    </div>
</div>














@section scripts{

    @*<script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/angular-route.js"></script>
    <script src="~/Scripts/angular-animate.js"></script>*@
    @*<script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyAoOYqWsJH0YY8AkR6mD6Ce0Kjp0FBRXxg"></script>*@




    <script type="text/javascript">

        var guanApp = angular.module('guanApp', [])


        guanApp.controller('addressController', ['$scope', function ($scope) {

            var vm = this;

            vm.geocoder = null;
            vm.geocodeResponse = null;
            vm.isSubmitSearch = false;
            vm.isAddStreetData = false;
            vm.headingInfo = "Angular is still working";
            vm.streetData = {};
            vm.signSearch = {};
            vm.addStreetData = {};
            vm.allStreetData = {};
            vm.submitSearch = _submitSearch;
            vm.submitStreetData = _submitStreetData;
            vm.deleteSign = _deleteSign;
            vm.onAddSuccess = _onAddSuccess;
            vm.onAddError = _onAddError;

            vm.onSignSuccess = _onSignSuccess;
            vm.onSignError = _onSignError;

            vm.onGetAllSuccess = _onGetAllSuccess;
            vm.onGetAllError = _onGetAllError;

            vm.onDeleteSuccess = _onDeleteSuccess;
            vm.onDeleteError = _onDeleteError;
              
            render();

            function render() {
                _getAllStreetData();


                vm.geocoder = new google.maps.Geocoder();


            }

            function _submitSearch() {
                vm.isSubmitSearch = true;
                console.log('touched');
                console.log(vm.signSearch)
                var address = (vm.signSearch.Line1 + " "
                        + vm.signSearch.City + " "
                        + vm.signSearch.State + " "
                        + vm.signSearch.ZipCode);

                _geoCodeAddress(address, _onGeoCodeSuccess);

            }

            function _getAllStreetData() {

                var url = "/api/addresses";

                var settings = {
                    cache: false
                    , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                    , dataType: "json"
                    , success: vm.onGetAllSuccess
                    , error: vm.onGetAllError
                    , type: "GET"
                };

                $.ajax(url, settings);

            }

            function _onGetAllSuccess(data) {
                console.log(data);
                $scope.$apply(vm.allStreetData = data.Items);

            }

            function _onGetAllError() {


            }

            function _deleteSign(id) {
                console.log(id);

                var url = "/api/addresses/" + id;

                var settings = {
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                    , dataType: "json"
                    , success: vm.onDeleteSuccess
                    , error: vm.onDeleteError
                    , type: "DELETE"
                };

                $.ajax(url, settings);


            }

            function _onDeleteSuccess() {

                _getAllStreetData();
            }


            function _onDeleteError() {



            }


            function _submitStreetData() {
                vm.isAddStreetData = true;
                console.log(vm.addStreetData);
                var address = (vm.addStreetData.Line1 + " "
                      + vm.addStreetData.City + " "
                      + vm.addStreetData.State + " "
                      + vm.addStreetData.ZipCode);

                _geoCodeAddress(address, _onGeoCodeSuccess);

            }

            function _geoCodeAddress(address, onScb) {
                vm.geocoder.geocode({ 'address': address }, onScb);
            };

            function _onGeoCodeSuccess(results, status) {

                $scope.$apply(vm.geocodeResponse = JSON.stringify(results, null, "     "))



                if (status == google.maps.GeocoderStatus.OK) {

                    var geometry = results[0].geometry;
                    var loc = geometry.location;






                    var lat = loc.lat();
                    var lon = loc.lng();



                   

                  

                   
                    if (vm.isSubmitSearch) {
                        console.log(vm.signSearch);
                        vm.signSearch.Lat = lat;
                        vm.signSearch.Lng = lon;
                        vm.signSearch.Radius = 1000;
                        _getStreetSignData(vm.signSearch);

                    }
                    if(vm.isAddStreetData)
                        console.log(vm.addStreetData)
                    vm.addStreetData.Lat = lat;
                    vm.addStreetData.Lng = lon;
                    _addStreetSignData(vm.addStreetData);
                  
                } else {
                    console.log('error')
                }
            }

            function _getStreetSignData(signSearch) {

                console.log(signSearch);
                var url = "/api/addresses/SignChecker";

                var settings = {
                    cache: false
                    , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                    , data: signSearch
                    , dataType: "json"
                    , success: vm.onSignSuccess
                    , error: vm.onSignError
                    , type: "POST"
                };

                $.ajax(url, settings);


            }

            function _addStreetSignData(addStreetData) {

                console.log(addStreetData);
                var url = "/api/addresses";

                var settings = {
                    cache: false
                    , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                    , data: addStreetData
                    , dataType: "json"
                    , success: vm.onAddSuccess
                    , error: vm.onAddError
                    , type: "POST"
                };

                $.ajax(url, settings);
            }

            function _onAddSuccess(data) {
                vm.isAddStreetData = false;
                console.log(data);
            }

            function _onAddError(data) {

                console.log(data);
            }

            function _onSignSuccess(data) {
                vm.isSubmitSearch = false;
             
                console.log(data);
                $scope.$apply(vm.streetData = data.Items);
            }

            function _onSignError() {



            }



        }]);

        guanApp.filter('dayOfWeekFilter', [function () {
            return function (DayOfWeek) {
                switch (DayOfWeek) {
                    case 1:
                        return "Monday";
                    case 2:
                        return "Tuesday";
                    case 3:
                        return "Wednesday";
                    case 4:
                        return "Thursday";
                    case 5:
                        return "Friday";
                    case 6:
                        return "Saturday";
                    case 7:
                        return "Sunday";



                }

            }


        }])



    </script>
}
